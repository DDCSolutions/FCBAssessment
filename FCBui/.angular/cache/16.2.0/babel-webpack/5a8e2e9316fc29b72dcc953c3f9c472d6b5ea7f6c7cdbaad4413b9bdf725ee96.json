{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonService {\n  constructor(http) {\n    this.http = http;\n    this.personUrl = 'https://localhost:7143/'; // URL to web api\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  addPerson(person) {\n    return this.http.post(this.personUrl, person, this.httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error);\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n_class = PersonService;\n_class.ɵfac = function PersonService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","PersonService","constructor","http","personUrl","httpOptions","headers","addPerson","person","post","pipe","handleError","error","status","console","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["P:\\Repos\\FCBAssessment\\FCBui\\src\\app\\person\\person.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Person } from './person';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonService {\r\n\r\n  private personUrl = 'https://localhost:7143/';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  addPerson(person: Person): Observable<Person> {\r\n    return this.http.post<Person>(this.personUrl, person, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.status === 0) {\r\n      console.error('An error occurred:', error.error);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, body was: `, error.error);\r\n    }\r\n    return throwError(() => new Error('Something bad happened; please try again later.'));\r\n  }\r\n\r\n}\r\n"],"mappings":";AACA,SAAwCA,WAAW,QAAQ,sBAAsB;AAEjF,SAAyBC,UAAU,QAAQ,MAAM;AACjD,SAASC,UAAU,QAAkB,gBAAgB;;;AAOrD,OAAM,MAAOC,aAAa;EAQxBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPN,KAAAC,SAAS,GAAG,yBAAyB,CAAC,CAAE;IAEhD,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIR,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAIG;EAEJS,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,IAAI,CAACL,SAAS,EAAEI,MAAM,EAAE,IAAI,CAACH,WAAW,CAAC,CACpEK,IAAI,CACHV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC/B;EACH;EAEQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtBC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACLE,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAErE,OAAOb,UAAU,CAAC,MAAM,IAAIgB,KAAK,CAAC,iDAAiD,CAAC,CAAC;EACvF;;SA3BWd,aAAa;;mBAAbA,MAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAblB,MAAa;EAAAmB,OAAA,EAAbnB,MAAa,CAAAoB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}